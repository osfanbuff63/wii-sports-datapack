name: Test and compile Python scripts
on: [push, pull_request, workflow_dispatch]
permissions:  # added using https://github.com/step-security/secure-workflows
  contents: read
jobs:
  build-and-compile:
    name: Check for errors and compile an .exe
    runs-on: windows-latest
    # Only run on PRs if the source branch is on someone else's repo
    if: ${{ github.event_name != 'pull_request' || github.repository != github.event.pull_request.head.repo.full_name }}
    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@dd2c410b088af7c0dc8046f3ac9a8f4148492a95
      with:
        egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs
    - name: Checkout repo
      uses: actions/checkout@d0651293c4a5a52e711f25b41b05b2212f385d28
    - name: Set up Python 3.10
      uses: actions/setup-python@b55428b1882923874294fa556849718a1d7f2ca5
      with:
        python-version: "3.10"
        check-latest: true
    - name: Cache dependencies
      uses: actions/cache@fd5de65bc895cf536527842281bea11763fefd77
      with:
        path: ~\AppData\Local\pip\Cache
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
         ${{ runner.os }}-pip-
    - name: Install dependencies
      run: |
        cd ./scripts/setup
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install flake8
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Compile exe for development env
      if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
      run: |
        cd ./scripts/setup
        python setup_dev.py build
    - uses: benjlevesque/short-sha@v1.2
      if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
      id: short-sha
    - name: Upload exe for development env as artifact
      if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
      uses: actions/upload-artifact@v3
      with:
        path: ./build/**/*.*
        name: dev_setup_helper+${{ steps.short-sha.outputs.sha }}
    #- name: Compile exe for docs # The build directory is automatically wiped
      #run: |
        #python setup_docs.py build
    - name: Upload exe for docs as artifact
      if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
      uses: actions/upload-artifact@v3
      with:
        path: ./build/**/*.*
        name: docs_setup_helper+${{ steps.short-sha.outputs.sha }}
